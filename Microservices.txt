========
Microservices: Independent development, independent deployment and scalable services
Spring boot and Spring cloud stack
Microservices patterns:
       - Externalized configuration -> spring cloud config
       - Api versioning
       - Service discovery -> eureka
       - Api gateway -> spring cloud gateway
       - Circuit breaker -> spring cloud gateway  & resilience4j
       - Rate limiting -> spring cloud gateway  & redis
       - Event sourcing -> kafka
       - CQRS -> kafka & postgresql & elasticsearch
       - Authentication / Authorization with oauth 2 and open id connect -> Keycloak authz server
       - Monitoring -> Prometheus & Grafana
       - Distributed tracing, log aggregation and visualization -> Logstash & Kibana
Kafka -> Brokers, topics, partitions, producer, consumer, spring kafka
Elasticsearch -> Index api, query api, spring elastic data
Containerization with docker -> Perfect match for microservices & Ready to ship application any cloud solution
Reactive development
========
spring-boot-starter-web: Spring Core, embedded Tomcat, spring mvc, jackson, logback
spring-boot-starter-test: Junit, Spring Test, Mockito
spring-boot-starter-actuator: HealthCheck, monitoring and metrics endpoint
spring-boot-starter-security: Spring security config, web security
spring-cloud-starter-config: Spring cloud common, context, config client
spring-boot-starter-oauth2-resource-server: Spring security core, oauth2, jose
spring-boot-starter-thymeleaf: Template Engine
spring-boot-starter-data-jpa: JDBC, hibernate, spring data
========